---
# Preamble

## Author
author:
  name: Мишина Анастасия Алексеевна
  orcid: 0009-0002-6246-7100
  email: 1132226532@pfur.ru
  affiliation:
    - name: Российский университет дружбы народов
      country: Российская Федерация
      postal-code: 117198
      city: Москва
      address: ул. Миклухо-Маклая, д. 6
## Title
title: "Отчет по лабораторной работе №2"
subtitle: "Дисциплина: Моделирование сетей передачи данных"
## Generic options
lang: ru-RU
number-sections: true
toc: true
toc-title: "Содержание"
toc-depth: 2
## Crossref customization
crossref:
  lof-title: "Список иллюстраций"
  lot-title: "Список таблиц"
  lol-title: "Листинги"
## Bibliography
bibliography:
  - bib/cite.bib
csl: _resources/csl/gost-r-7-0-5-2008-numeric.csl
## Formats
format:
### Pdf output format
  pdf:
    toc: true
    number-sections: true
    colorlinks: false
    toc-depth: 2
    lof: true # List of figures
    lot: true # List of tables
#### Document
    documentclass: scrreprt
    papersize: a4
    fontsize: 12pt
    linestretch: 1.5
#### Language
    babel-lang: russian
    babel-otherlangs: english
#### Biblatex
    cite-method: biblatex
    biblio-style: gost-numeric
    biblatexoptions:
      - backend=biber
      - langhook=extras
      - autolang=other*
#### Misc options
    csquotes: true
    indent: true
    header-includes: |
      \usepackage{indentfirst}
      \usepackage{float}
      \floatplacement{figure}{H}
      \usepackage[math,RM={Scale=0.94},SS={Scale=0.94},SScon={Scale=0.94},TT={Scale=MatchLowercase,FakeStretch=0.9},DefaultFeatures={Ligatures=Common}]{plex-otf}
### Docx output format
  docx:
    toc: true
    number-sections: true
    toc-depth: 2
---

# Цель работы

Основной целью работы является знакомство с инструментом для измерения пропускной способности сети в режиме реального времени — iPerf3, а также получение навыков проведения интерактивного эксперимента по измерению пропускной способности моделируемой сети в среде Mininet.

# Задание

1. Установить на виртуальную машину mininet iPerf3 и дополнительное программное обеспечения для визуализации и обработки данных.
2. Провести ряд интерактивных экспериментов по измерению пропускной способности с помощью iPerf3 с построением графиков.

# Теоретическое введение

Mininet[@mininet] -- это эмулятор компьютерной сети. Под компьютерной сетью подразумеваются простые компьютеры — хосты, коммутаторы, а так же OpenFlow-контроллеры. С помощью простейшего синтаксиса в примитивном интерпретаторе команд можно разворачивать сети из произвольного количества хостов, коммутаторов в различных топологиях и все это в рамках одной виртуальной машины(ВМ). На всех хостах можно изменять сетевую конфигурацию, пользоваться стандартными утилитам (ifconfig, ping) и даже получать доступ к терминалу. На коммутаторы можно добавлять различные правила и маршрутизировать трафик.

iPerf3[@iperf] представляет собой кроссплатформенное клиент-серверное приложение с открытым исходным кодом,
которое можно использовать для измерения пропускной способности между двумя конечными устройствами.
iPerf3 может работать с транспортными протоколами TCP, UDP и SCTP:

- TCP и SCTP:
  - измеряет пропускную способность;
  - позволяет задать размер MSS/MTU;
  - отслеживает размер окна перегрузки TCP (CWnd).
- UDP:
  - измеряет пропускную способность;
  - измеряет потери пакетов;
  - измеряет колебания задержки (jitter);
  - поддерживает групповую рассылку пакетов (multicast).

# Выполнение лабораторной работы

## Установка необходимого программного обеспечения

Запустим виртуальную среду с mininet. Из основной ОС подключимся к виртуальной машине по SSH и убедимся, что второй интерфейс для выхода в сеть активирован ([рис. @fig-001]).

![Подключение к mininet по ssh](image/1.png){#fig-001 width=70%}

Обновим репозитории программного обеспечения на виртуальной машине. Установим iperf3 и необходимое дополнительное программное обеспечение на виртуальную машину ([рис. @fig-002]).

![Установка ПО](image/2.png){#fig-002 width=70%}

Развернем iperf3_plotter ([рис. @fig-003]).

![Развертывание iperf3_plotter](image/3.png){#fig-003 width=70%}

## Интерактивные эксперименты

Зададим простейшую топологию, состоящую из двух хостов и коммутатора с назначенной по умолчанию mininet сетью 10.0.0.0/8. После введения этой команды запустятся терминалы двух хостов, коммутатора и контроллера. Терминалы коммутатора и контроллера закроем. В терминале виртуальной машины посмотрим параметры запущенной в интерактивном режиме топологии ([рис. @fig-004]).

![Задание простейшей топологии](image/4.png){#fig-004 width=70%}

Проведем простейший интерактивный эксперимент по измерению пропускной способности с помощью iPerf3 ([рис. @fig-005])

![Тестовое соединение между хостами](image/5.png){#fig-005 width=70%}

Проанализируем полученный в результате выполнения теста сводный отчёт, отобразившийся как на клиенте, так и на сервере iPerf3. Он содержет следующие данные:

- ID: идентификационный номер соединения -- 7.
- интервал (Interval): временной интервал для периодических отчетов о пропускной способности (по умолчанию временной интервал равен 1 секунде);
- передача (Transfer): сколько данных было передано за каждый интервал времени -- было пепредано от 3.42 до 5.41 GB в секунду;
- пропускная способность (Bitrate): измеренная пропускная способность в каждом временном интервале -- от 29.3 до 46.5 Gbit/sec;
- Retr: количество повторно переданных TCP-сегментов за каждый временной интервал (это поле увеличивается, когда TCP-сегменты теряются в сети из-за перегрузки или повреждения) -- чем больше пропускная способность, тем больше число повторно переданных  TCP-сегментов. Максимум она достигает 15 при битрейте 39.8 Gbit/sec;
- Cwnd: указывает размер окна перегрузки в каждом временном интервале (TCP использует эту переменную для ограничения объёма данных, которые TCP-клиент может отправить до получения подтверждения отправленных данных) -- это фиксированный параметр равный 8.09 MB.

Проведем аналогичный эксперимент в интерфейсе mininet ([рис. @fig-006]).

![Эксперимент в интерфейсе mininet](image/6.png){#fig-006 width=70%}

Сравним результаты. Увидим, что во втором случае было передано на 8.8 GB больше; пропускная способность увеличилась на 7.6.

После убьем процесс на сервере ([рис. @fig-007]).

![Завершение процесса на сервере](image/7.png){#fig-007 width=70%}

Для указания iPerf3 периода времени для передачи можно использовать ключ -t (или --time) — время в секундах для передачи (по умолчанию 10 секунд) ([рис. @fig-008]).

![Указание периода времени передачи](image/8.png){#fig-008 width=70%}

Настроим клиент iPerf3 для выполнения теста пропускной способности с 2-секундным интервалом времени отсчёта как на клиенте, так и на сервере. Используем опцию `-i` для установки интервала между отсчётами, измеряемого в секундах ([рис. @fig-009]).

![Выполнения теста пропускной способности с 2-секундным интервалом](image/9.png){#fig-009 width=70%}

Можно увидеть, что действительно интервал увеличился в два раза, в результате чего в два раза увеличился также вес переданный за один интервал времени, но пропускная способность и суммарные величины очевидно практически не изменились.

Зададим на клиенте iPerf3 отправку определённого объёма данных. Используем опцию `-n` для установки количества байт для передачи ([рис. @fig-010]). По умолчанию iPerf3 выполняет измерение пропускной способности в течение 10 секунд, но при задании количества данных для передачи клиент iPerf3 будет продолжать отправлять пакеты до тех пор, пока не будет отправлен весь объем данных, указанный пользователем.

![Задание в тесте определённого объёма данных](image/10.png){#fig-010 width=70%}

Изменим в тесте измерения пропускной способности iPerf3 протокол передачи данных с TCP (установлен по умолчанию) на UDP. iPerf3 автоматически определяет протокол транспортного уровня на стороне сервера. Для изменения протокола используем опцию `-u` на стороне клиента iPerf3 ([рис. @fig-011]).

![Изменение протокола передачи данных](image/11.png){#fig-011 width=70%}

В тесте измерения пропускной способности iPerf3 изменим номер порта для отправки/получения пакетов или датаграмм через указанный порт ([рис. @fig-012]).

![Изменение номера порта для отправки/получения пакетов](image/12.png){#fig-012 width=70%}

По умолчанию после запуска сервер iPerf3 постоянно прослушивает входящие соединения. В тесте измерения пропускной способности iPerf3 зададим для сервера параметр обработки данных только от одного клиента с остановкой сервера по завершении теста. Для этого используем опцию `-1` на сервере iPerf3 ([рис. @fig-013]).

![Параметр обработки данных только от одного клиента с остановкой сервера по завершении теста](image/13.png){#fig-013 width=70%}

Экспортируем результаты теста измерения пропускной способности iPerf3 в файл JSON ([рис. @fig-014]).

![Экспорт результатов теста измерения пропускной способности iPerf3 в файл JSON](image/14.png){#fig-014 width=70%}

Убедимся, что файл iperf_results.json создан в указанном каталоге. Для этого в терминале хоста h1 введем следующие команды ([рис. @fig-015]).

![Проверка создания файла iperf_results.json](image/15.png){#fig-015 width=70%}

В виртуальной машине mininet исправим права запуска X-соединения. Скопируем значение куки (MIT magic cookie) своего пользователя mininet в файл для пользователя root ([рис. @fig-016]).

![Исправление прав запуска X-соединения](image/16.png){#fig-016 width=70%}

Визуализируем результаты эксперимента. В виртуальной машине mininet перейдем в каталог для работы над проектом, проверим права доступа к файлу JSON. Сгенерируем выходные данные для файла JSON iPerf3. Убедимся, что файлы с данными и графиками сформировались ([рис. @fig-017]).

![Визуализация результатов эксперимента](image/17.png){#fig-017 width=70%}

# Выводы

В результате выполнения данной лабораторной работы я познакомилась с инструментом для измерения пропускной способности сети в режиме реального времени — iPerf3, а также получила навыки проведения интерактивного эксперимента по измерению пропускной способности моделируемой сети в среде Mininet.

# Список литературы{.unnumbered}

::: {#refs}
:::